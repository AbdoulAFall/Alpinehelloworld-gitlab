image: docker:latest
services: 
  - name: docker:dind
    alias: docker

stages: 
  - Build image
  - Test acceptation
  - Release image
  - Deploy review
  - Stop review
  - Deploy staging
  - Test staging
  - Deploy prod
  - Test prod

.test_template: &test
  image: alpine
  only:
    - master
  script: 
    - apk --no-cache add curl 
    - curl "https://$DOMAIN" | grep -q "Hello world!"

.build:
  stage: Build image
  script:
    - docker build -t alpinehelloworld .
    - docker save alpinehelloworld > alpinehelloworld.tar
  artifacts: 
    paths: 
      - alpinehelloworld.tar

.test acceptation: 
  stage: Test acceptation
  script: 
    - docker load < alpinehelloworld.tar
    - docker run -d -p 80:5000 --env PORT=5000 --name webapp alpinehelloworld
    - sleep 5
    - apk --no-cache add curl 
    - curl "http://docker" | grep -q "Hello world!"

.release image: 
  stage: Release image
  script: 
    - docker load < alpinehelloworld.tar
    - docker tag alpinehelloworld "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker tag alpinehelloworld "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker push "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"


deploy staging:
  stage: Deploy staging
  environment: 
    name: staging
    url: https://eazytrainingfall-staging.herokuapp.com
  only:
    - master
  script: 
    - apk --no-cache add npm 
    - npm install -g heroku 
    - heroku container:login 
    - heroku create eazytrainingfall-staging || echo "project already exist"
    - heroku container:push -a eazytrainingfall-staging web 
    - heroku container:release -a eazytrainingfall-staging web 


deploy prod:
  stage: Deploy prod
  environment: 
    name: prod
    url: https://eazytrainingfall-prod.herokuapp.com
  only:
    - master
  script: 
    - apk --no-cache add npm 
    - npm install -g heroku 
    - heroku container:login 
    - heroku create eazytrainingfall-prod || echo "project already exist"
    - heroku container:push -a eazytrainingfall-prod web 
    - heroku container:release -a eazytrainingfall-prod web 


.deploy review:
  stage: Deploy review
  environment: 
    name: review/$CI_COMMIT_REF_NAME
    url: https://eazytrainingfall-$CI_COMMIT_REF_NAME.herokuapp.com
    on_stop: stop review
  only:
    - merge_requests
  script: 
    - apk --no-cache add npm 
    - npm install -g heroku 
    - heroku container:login 
    - heroku create eazytrainingfall-$CI_COMMIT_REF_NAME || echo "project already exist"
    - heroku container:push -a eazytrainingfall-$CI_COMMIT_REF_NAME web 
    - heroku container:release -a eazytrainingfall-$CI_COMMIT_REF_NAME web 

stop review:
  stage: Stop review
  variables:
    GIT_STRATEGY: none
  environment: 
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  only:
    - merge_requests
  when: manual
  script:
    - apk --no-cache add npm 
    - npm install -g heroku 
    - heroku container:login 
    - heroku apps:destroy -a eazytrainingfall-$CI_COMMIT_REF_NAME -c eazytrainingfall-$CI_COMMIT_REF_NAME

test staging:
  <<: *test
  stage: Test staging
  variables: 
    DOMAIN: eazytrainingfall-staging.herokuapp.com

test prod:
  <<: *test
  stage: Test prod
  variables: 
    DOMAIN: eazytrainingfall-prod.herokuapp.com

